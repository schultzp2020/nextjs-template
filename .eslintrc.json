{
  "plugins": ["eslint-comments", "jest", "promise", "unicorn"],
  "extends": [
    "airbnb",
    "airbnb/hooks",
    "plugin:eslint-comments/recommended",
    "plugin:jest/recommended",
    "plugin:promise/recommended",
    "plugin:unicorn/recommended",
    "prettier",
    "next"
  ],
  "env": {
    "browser": true,
    "jest": true,
    "node": true
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "parserOptions": {
    "project": "./tsconfig.json",
    "ecmaVersion": 13,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "rules": {
    // React is already in-scope for all files compiled with Next.js
    "react/react-in-jsx-scope": "off",
    // SSR does not support useLayoutEffect
    "no-restricted-imports": [
      "error",
      {
        "name": "react",
        "importNames": ["useLayoutEffect"],
        "message": "`useLayoutEffect` causes a warning in SSR. Use `useEffect`"
      }
    ],
    // Allows variables starting with _ to be ignored if not used
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    // Enforces camelcase
    "camelcase": [
      "error",
      {
        "ignoreDestructuring": true
      }
    ],
    // Too restrictive, writing ugly code to defend against a very unlikely scenario: https://eslint.org/docs/rules/no-prototype-builtins
    "no-prototype-builtins": "off",
    // https://basarat.gitbooks.io/typescript/docs/tips/defaultIsBad.html
    "import/prefer-default-export": "off",
    // Too restrictive: https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/destructuring-assignment.md
    "react/destructuring-assignment": "off",
    // No jsx extension: https://github.com/facebook/create-react-app/issues/87#issuecomment-234627904
    "react/jsx-filename-extension": "off",
    // Allow only arrow function based components
    "react/function-component-definition": [2, { "namedComponents": "arrow-function" }],
    // Common practice in React
    "react/jsx-props-no-spreading": "off",
    // Use function hoisting to improve code readability
    "no-use-before-define": ["error", { "functions": false, "classes": true, "variables": true }],
    // Common abbreviations are known and readable
    "unicorn/prevent-abbreviations": "off",
    // Airbnb prefers forEach
    "unicorn/no-array-for-each": "off",
    // React prefers capitalized file names for components
    "unicorn/filename-case": "off",
    // It's not accurate in the monorepo style
    "import/no-extraneous-dependencies": "off",
    // Import for import of components
    "import/no-cycle": "off"
  },
  "overrides": [
    {
      "files": ["**/*.js"],
      "rules": {
        // Allow CJS until ESM support improves
        "@typescript-eslint/no-var-requires": "off",
        "unicorn/prefer-module": "off"
      }
    },
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": ["@typescript-eslint"],
      "extends": [
        "airbnb-typescript",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking"
      ],
      "parser": "@typescript-eslint/parser",
      "rules": {
        // It's not accurate in the monorepo style
        "import/no-extraneous-dependencies": "off",
        // Allow most functions to rely on type inference. If the function is exported, then `@typescript-eslint/explicit-module-boundary-types` will ensure it's typed.
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-use-before-define": [
          "error",
          { "functions": false, "classes": true, "variables": true, "typedefs": true }
        ]
      }
    }
  ]
}
